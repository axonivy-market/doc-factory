---------------------------------------------
7.4.0 Release Notes 
---------------------------------------------

*AIPROD-177
DocFactory: the DocumentWorker logic injection interface has a new method 
(default File onGeneratedFile(Document document, File generatedFile))
for performing some logic on the file that has been generated after 
the template and the data have been merged together.

*AIPROD-187
FIX: The DocumentTemplate public FileOperationMessage produceDocument(File destinationDocument) method 
stores the produced files on windows in an Ivy relative path even if the file path in an absolute one.

---------------------------------------------
7.3.0 Release Notes 
---------------------------------------------
*AF-22096
- DocFactory: new DocumentCreationOptions property (removeWhiteSpaceInPdfEditableFields) for removing the white spaces leaved after mail merge in an editable PDF.
See also https://forum.aspose.com/t/fillable-word-docs-to-fillable-pdfs/15360
- LicenseLoader stores internally the Aspose product licenses already loaded in a given Ivy project so that we don't need to load the license file unnecessarily.
- AsposeDocFactoryFileGenerator: the old deprecated "public static FileOperationMessage exportDocumentToFile(Document document, String baseFilePath, 
int outputFormat, boolean generateBlankDocumentIfGivenDocIsNull)" method has been removed. It was not flexible enough for getting new Options. 
Please use the new "public FileOperationMessage exportDocumentToFile(Document document, String baseFilePath, int outputFormat)" instead. 
Note that this class was never intended to be used directly. Instead use the DocumentTemplate.produceDocument(File destinationFile)} or 
an instance of the BaseDocFactory (BaseDocFactory.getInstance()) class with its generateDocument methods.

*AIPROD-174
- New ch.ivyteam.ivy.addons.docfactory.FileAppender for appending pdf files together (old PdfFactory) and Office files together.
- The BaseDocFactory has a new method for appending DocumentTemplate together at mail merge time: 
docFactory.generateDocuments(List<DocumentTemplate> docuemntTemplates, MultipleDocumentsCreationOptions multipleDocumentsCreationOptions)
