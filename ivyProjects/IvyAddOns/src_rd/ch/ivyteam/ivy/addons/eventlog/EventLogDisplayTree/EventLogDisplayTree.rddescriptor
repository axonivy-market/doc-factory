<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<richDialogDescriptor>
    <description>Execute a query on the event log tables and display in a table tree view the result.</description>
    <autoScreenshot>true</autoScreenshot>
    <acceptedBroadcast>
        <name>search</name>
        <description>See method with the same name.</description>
        <attachment>
            <name>criteria</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.technical.eventlog.EventLogSearchCriteria</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </acceptedBroadcast>
    <acceptedBroadcast>
        <name>prev</name>
        <description>See method with the same name.</description>
    </acceptedBroadcast>
    <acceptedBroadcast>
        <name>next</name>
        <description>See method with the same name.</description>
    </acceptedBroadcast>
    <method>
        <name>next</name>
        <description>Selects the next table tree item.</description>
    </method>
    <method>
        <name>getList</name>
        <description>Gets the event list displayed in the table tree. To avoid the same line twice, only leaf are returned.</description>
        <outputParameter>
            <name>eventLogs</name>
            <description></description>
            <parameterType>List&lt;ch.ivyteam.ivy.addons.data.technical.eventlog.EventLog&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>search</name>
        <description>Search the event log tables to find events that match the given criteria and display the result.</description>
        <inputParameter>
            <name>criteria</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.data.technical.eventlog.EventLogSearchCriteria</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <method>
        <name>prev</name>
        <description>Selects the previous table tree item.</description>
    </method>
    <method>
        <name>getTree</name>
        <description>Gets the logical tree displayed.</description>
        <outputParameter>
            <name>eventLogTree</name>
            <description></description>
            <parameterType>Tree</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>getSelectedNode</name>
        <description>Gets the event of the selected line of the table.</description>
        <outputParameter>
            <name>data</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.data.technical.eventlog.EventLog</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>getTableTreeWidget</name>
        <description>Get the table tree widget used inside the component.&#xD;
It permits to customize how that widget is displayed.</description>
        <outputParameter>
            <name>tableTreeWidget</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.richdialog.widgets.components.RTableTree</parameterType>
            <nullPermitted>false</nullPermitted>
        </outputParameter>
    </method>
    <method>
        <name>setTree</name>
        <description>Sets the logical tree displayed.</description>
        <inputParameter>
            <name>eventLogTree</name>
            <description></description>
            <parameterType>Tree</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </method>
    <startMethod>
        <name>start</name>
        <description>Default Rich Dialog start
This method can not be changed or deleted!</description>
    </startMethod>
    <startMethod>
        <name>startGroupByGroupId</name>
        <description>Start the rich dialog and group the search result by group identifier.</description>
    </startMethod>
    <startMethod>
        <name>startGroupByCase</name>
        <description>Start the rich dialog and group the search result by case.</description>
    </startMethod>
    <startMethod>
        <name>startGroupByGroupId</name>
        <description>Start the rich dialog and group the search result by group identifier.</description>
        <inputParameter>
            <name>columns</name>
            <description>List of the column to display in the right sequence. Only EVENT_DATE, EVENT_TIME, EVENT_TYPE, EVENT_SUB_TYPE, OBJECT_ID, MESSAGE, SEVERITY, GROUPID, IS_BUSINESS_EVENT, INITIATOR, USER_NAME, SOURCE can be used.</description>
            <parameterType>List&lt;ch.ivyteam.ivy.workflow.eventlog.EventLogProperty&gt;</parameterType>
            <nullPermitted>true</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>headerCmsUri</name>
            <description>Where the column headers can be found in the CMS. The content should be structured as /ch/ivyteam/ivy/addons/eventlog/EventLogDisplayTree/plainStrings.</description>
            <parameterType>String</parameterType>
            <nullPermitted>true</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startGroupByCase</name>
        <description>Start the rich dialog and group the search result by case.</description>
        <inputParameter>
            <name>columns</name>
            <description>List of the column to display in the right sequence. Only EVENT_DATE, EVENT_TIME, EVENT_TYPE, EVENT_SUB_TYPE, OBJECT_ID, MESSAGE, SEVERITY, GROUPID, IS_BUSINESS_EVENT, INITIATOR, USER_NAME, SOURCE can be used.</description>
            <parameterType>List&lt;ch.ivyteam.ivy.workflow.eventlog.EventLogProperty&gt;</parameterType>
            <nullPermitted>true</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>headerCmsUri</name>
            <description>Where the column headers can be found in the CMS. The content should be structured as /ch/ivyteam/ivy/addons/eventlog/EventLogDisplayTree/plainStrings.</description>
            <parameterType>String</parameterType>
            <nullPermitted>true</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startGroupByGroupId</name>
        <description></description>
        <inputParameter>
            <name>groupId</name>
            <description>id of group</description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <startMethod>
        <name>startGroupByGroupIdAndCase</name>
        <description></description>
        <inputParameter>
            <name>groupId</name>
            <description></description>
            <parameterType>String</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
        <inputParameter>
            <name>eventLogProperties</name>
            <description></description>
            <parameterType>List&lt;ch.ivyteam.ivy.workflow.eventlog.EventLogProperty&gt;</parameterType>
            <nullPermitted>false</nullPermitted>
        </inputParameter>
    </startMethod>
    <firedEvent>
        <name>selectionChanged</name>
        <description>Fired when the selected item of the table tree view change.</description>
        <attachment>
            <name>data</name>
            <description></description>
            <parameterType>ch.ivyteam.ivy.addons.data.technical.eventlog.EventLogData</parameterType>
            <nullPermitted>true</nullPermitted>
        </attachment>
    </firedEvent>
    <firedEvent>
        <name>searchResultChanged</name>
        <description></description>
    </firedEvent>
    <property>
        <name>guid</name>
        <value>12CE0113254E1634</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>version</name>
        <value>1</value>
        <readOnly>true</readOnly>
    </property>
    <property>
        <name>binary</name>
        <value>false</value>
        <readOnly>true</readOnly>
    </property>
</richDialogDescriptor>
