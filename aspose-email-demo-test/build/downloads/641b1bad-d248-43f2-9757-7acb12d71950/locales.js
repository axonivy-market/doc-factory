/** German */
PrimeFaces.locales['de'] = {
    closeText: 'Schließen',
    prevText: 'Zurück',
    nextText: 'Weiter',
    monthNames: ['Januar', 'Februar', 'März', 'April', 'Mai', 'Juni', 'Juli', 'August', 'September', 'Oktober', 'November', 'Dezember' ],
    monthNamesShort: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez' ],
    dayNames: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'],
    dayNamesShort: ['Son', 'Mon', 'Die', 'Mit', 'Don', 'Fre', 'Sam'],
    dayNamesMin: ['S', 'M', 'D', 'M ', 'D', 'F ', 'S'],
    weekHeader: 'Woche',
    weekNumberTitle: 'W',
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix:'',
    timeOnlyTitle: 'Nur Zeit',
    timeText: 'Zeit',
    hourText: 'Stunde',
    minuteText: 'Minute',
    secondText: 'Sekunde',
    millisecondText: 'Millisekunde',
    currentText: 'Aktuelles Datum',
    ampm: false,
    year: 'Jahr',
    month: 'Monat',
    week: 'Woche',
    day: 'Tag',
    list: 'Agenda',
    allDayText: 'Ganzer Tag',
    moreLinkText: 'Mehr...',
    noEventsText: 'Keine Einträge',
    today: 'Heute',
    clear: 'Löschen',
    aria: {
        'paginator.PAGE': 'Seite {0}',
        'calendar.BUTTON': 'Kalender anzeigen',
        'datatable.sort.ASC': 'Spalten aufsteigend sortieren',
        'datatable.sort.DESC': 'Spalten absteigend sortieren',
        'datatable.sort.NONE': 'Spaltensortierung entfernen',
        'columntoggler.CLOSE': 'Schließen',
        'overlaypanel.CLOSE': 'Schließen',
        'colorpicker.OPEN': 'Farbauswahl öffnen',
        'colorpicker.CLOSE': 'Farbauswahl schließen',
        'colorpicker.CLEAR': 'Die ausgewählte Farbe löschen',
        'colorpicker.MARKER': 'Sättigung: {s}. Helligkeit: {v}.',
        'colorpicker.HUESLIDER': 'Schieberegler Farbton',
        'colorpicker.ALPHASLIDER': 'Schieberegler Deckkraft',
        'colorpicker.INPUT': 'Farbwertfeld',
        'colorpicker.FORMAT': 'Farbformat',
        'colorpicker.SWATCH': 'Farbmuster',
        'colorpicker.INSTRUCTION': 'Sättigungs- und Helligkeitsauswahl. Verwenden Sie die Pfeiltasten oben, unten, links und rechts zur Auswahl.',
        'spinner.INCREASE': 'Wert erhöhen',
        'spinner.DECREASE': 'Wert vermindern'
    },
    messages: {  //optional for Client Side Validation
        'javax.faces.component.UIInput.REQUIRED': '{0}: Eingabe erforderlich.',
        'javax.faces.converter.IntegerConverter.INTEGER': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein.',
        'javax.faces.converter.IntegerConverter.INTEGER_detail': '{2}: \'{0}\' muss eine Zahl zwischen -2147483648 und 2147483647 sein. Beispiel: {1}',
        'javax.faces.converter.DoubleConverter.DOUBLE': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein.',
        'javax.faces.converter.DoubleConverter.DOUBLE_detail': '{2}: \'{0}\' muss eine Zahl zwischen 4.9E-324 und 7976931348623157E308 sein. Beispiel: {1}',
        'javax.faces.converter.BigDecimalConverter.DECIMAL': '{2}: \'{0}\' muss eine Dezimalzahl mit Vorzeichen sein.',
        'javax.faces.converter.BigDecimalConverter.DECIMAL_detail': '{2}: \'{0}\' muss eine Dezimalzahl mit Vorzeichen sein, die aus Null oder mehr Ziffern besteht, gefolgt von Dezimalstellen nach einem Punkt. Beispiel: {1}',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein.',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein. Beispiel: {1}',
        'javax.faces.converter.ByteConverter.BYTE': '{2}: \'{0}\' muss eine Zahl zwischen 0 und 255 sein.',
        'javax.faces.converter.ByteConverter.BYTE_detail': '{2}: \'{0}\' muss eine Zahl zwischen 0 und 255 sein. Beispiel: {1}',
        'javax.faces.converter.CharacterConverter.CHARACTER': '{1}: \'{0}\' muss ein gültiges Zeichen sein.',
        'javax.faces.converter.CharacterConverter.CHARACTER_detail': '{1}: \'{0}\' muss ein gültiges ASCII-Zeichen sein.',
        'javax.faces.converter.ShortConverter.SHORT': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein',
        'javax.faces.converter.ShortConverter.SHORT_detail': '{2}: \'{0}\' muss eine Zahl zwischen -32768 und 32767 sein. Beispiel: {1}',
        'javax.faces.converter.BooleanConverter.BOOLEAN': '{1}: \'{0}\' muss \'wahr\' oder \'falsch\' sein.',
        'javax.faces.converter.BooleanConverter.BOOLEAN_detail': '{1}: \'{0}\' muss \'wahr\' oder \'falsch\' sein.  Ein Wert der nicht \'wahr\' ist wird zu \'falsch\'.',
        'javax.faces.validator.LongRangeValidator.MAXIMUM': '{1}: Der Wert ist größer als das Maximum von \'{0}\'.',
        'javax.faces.validator.LongRangeValidator.MINIMUM': '{1}: Der Wert ist kleiner als das Minimum von \'{0}\'.',
        'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE': '{2}: Wert ist nicht innerhalb der Grenzen von {0} und {1}.',
        'javax.faces.validator.LongRangeValidator.TYPE={0}': 'Wert entsprecht nicht dem vorgegebenen Typ.',
        'javax.faces.validator.DoubleRangeValidator.MAXIMUM': '{1}: Der Wert ist größer als das erlaubte Maximum von \'{0}\'.',
        'javax.faces.validator.DoubleRangeValidator.MINIMUM': '{1}: Der Wert ist kleiner als das erlaubte Minimum von \'{0}\'.',
        'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE': '{2}: Attribute nicht innerhalb der Grenzen von {0} und {1}.',
        'javax.faces.validator.DoubleRangeValidator.TYPE={0}': 'Der Wert entspricht nicht dem erwarteten Typ.',
        'javax.faces.converter.FloatConverter.FLOAT': '{2}: \'{0}\' muss eine Zahl mit einer oder mehr Ziffern sein.',
        'javax.faces.converter.FloatConverter.FLOAT_detail': '{2}: \'{0}\' muss eine Zahl zwischen 1.4E-45 und 3.4028235E38 sein. Beispiel: {1}',
        'javax.faces.converter.DateTimeConverter.DATE': '{2}: \'{0}\' kann nicht als Datum interpretiert werden.',
        'javax.faces.converter.DateTimeConverter.DATE_detail': '{2}: \'{0}\' kann nicht als Datum interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.DateTimeConverter.TIME': '{2}: \'{0}\' kann nicht als Zeit interpretiert werden.',
        'javax.faces.converter.DateTimeConverter.TIME_detail': '{2}: \'{0}\' kann nicht als Zeit interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.DateTimeConverter.DATETIME': '{2}: \'{0}\' kann nicht als Datum oder Zeit interpretiert werden.',
        'javax.faces.converter.DateTimeConverter.DATETIME_detail': '{2}: \'{0}\' kann nicht als Datum oder Zeit interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.DateTimeConverter.PATTERN_TYPE': '{1}: Ein \'pattern\' der \'type\' Attribute muss angegeben werden um den Wert \'{0}\' zu konvertieren.', 
        'javax.faces.converter.NumberConverter.CURRENCY': '{2}: \'{0}\' kann nicht als Währung interpretiert werden.',
        'javax.faces.converter.NumberConverter.CURRENCY_detail': '{2}: \'{0}\' kann nicht als Währung interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.NumberConverter.PERCENT': '{2}: \'{0}\' kann nicht als Prozent interpretiert werden.',
        'javax.faces.converter.NumberConverter.PERCENT_detail': '{2}: \'{0}\' kann nicht als Prozent interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.NumberConverter.NUMBER': '{2}: \'{0}\' kann nicht als Zahl interpretiert werden.',
        'javax.faces.converter.NumberConverter.NUMBER_detail': '{2}: \'{0}\' kann nicht als Zahl interpretiert werden. Beispiel: {1}',
        'javax.faces.converter.NumberConverter.PATTERN': '{2}: \'{0}\' kann nicht als Muster interpretiert werden.',
        'javax.faces.converter.NumberConverter.PATTERN_detail': '{2}: \'{0}\' kann nicht als Muster interpretiert werden. Beispiel: {1}',
        'javax.faces.validator.LengthValidator.MINIMUM': '{1}: Die Länge ist kleiner als das Minimum von \'{0}\'.',
        'javax.faces.validator.LengthValidator.MAXIMUM': '{1}: die Länge ist größer als das Maximum von \'{0}\'.',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET': 'Ein regulärer Ausdruck darf nicht leer sein.',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail': 'Ein regulärer Ausdruck darf nicht leer sein.',
        'javax.faces.validator.RegexValidator.NOT_MATCHED': 'Das Muster stimmt nicht überein.',
        'javax.faces.validator.RegexValidator.NOT_MATCHED_detail': 'Das Muster \'{0}\' des regulären Ausdruck stimmt nicht überein.',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION': 'Fehler im regulären Ausdruck.',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail': 'Fehler im regulären Ausdruck, \'{0}\'.',
        //optional for bean validation integration in client side validation
        'javax.faces.validator.BeanValidator.MESSAGE': '{0}',
        'javax.validation.constraints.AssertFalse.message': 'Muss falsch sein',
        'javax.validation.constraints.AssertTrue.message': 'Muss wahr sein',
        'javax.validation.constraints.DecimalMax.message': 'Muss kleiner oder gleich {0} sein',
        'javax.validation.constraints.DecimalMin.message': 'Muss größer oder gleich {0} sein',
        'javax.validation.constraints.Digits.message': 'Zahl außerhalb der Grenzen. (<{0} Ziffern>.<{1} Ziffern> möglich)',
        'javax.validation.constraints.Future.message': 'Muss in der Zukunft liegen',
        'javax.validation.constraints.Max.message': 'Muss kleiner oder gleich {0} sein',
        'javax.validation.constraints.Min.message': 'Muss größer oder gleich {0} sein',
        'javax.validation.constraints.NotNull.message': 'darf nicht Null sein',
        'javax.validation.constraints.Null.message': 'Muss Null sein',
        'javax.validation.constraints.Past.message': 'Muss in der Vergangenheit liegen',
        'javax.validation.constraints.Pattern.message': 'Muss gleich "{0}" sein',
        'javax.validation.constraints.Size.message': 'Größe muss zwischen {0} und {1} liegen'
    }
};
/** French */
PrimeFaces.locales['fr'] = {
    closeText: "Fermer",
    prevText: "Précédent",
    nextText: "Suivant",
    monthNames: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
    monthNamesShort: ["Janv", "Févr", "Mars", "Avr", "Mai", "Juin", "Juill", "Août", "Sept", "Oct", "Nov", "Déc"],
    dayNames: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"],
    dayNamesShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
    dayNamesMin: ["D", "L", "M", "M", "J", "V", "S"],
    weekHeader: "Semaine",
    weekNumberTitle: "S",
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix: "",
    timeOnlyTitle: "Choisir l'heure",
    timeText: "Heure",
    hourText: "Heures",
    minuteText: "Minutes",
    secondText: "Secondes",
    millisecondText: "Millisecondes",
    currentText: "Maintenant",
    ampm: false,
    year: "Année",
    month: "Mois",
    week: "Semaine",
    day: "Jour",
    list: "Agenda",
    allDayText: "Toute la journée",
    moreLinkText: "Plus...",
    noEventsText: "Pas d'événements",
    today: "Aujourd'hui",
    clear: "Effacer",
    aria: {
        'paginator.PAGE': 'Page {0}',
        'calendar.BUTTON': 'Montrer le calendrier',
        'datatable.sort.ASC': 'activer pour trier la colonne dans l\'ordre croissant',
        'datatable.sort.DESC': 'activer pour trier la colonne dans l\'ordre décroissant',
        'datatable.sort.NONE': 'activer pour retirer le tri sur la colonne',
        'columntoggler.CLOSE': 'Fermer',
        'overlaypanel.CLOSE': 'Fermer',
        'colorpicker.OPEN': 'Ouvrir le sélecteur de couleur',
        'colorpicker.CLOSE': 'Fermer le sélecteur de couleur',
        'colorpicker.CLEAR': 'Effacer la couleur sélectionnée',
        'colorpicker.MARKER': 'Saturation: {s}. Luminosité: {v}.',
        'colorpicker.HUESLIDER': 'Curseur de teinte',
        'colorpicker.ALPHASLIDER': 'Curseur d\'opacité',
        'colorpicker.INPUT': 'Valeur du champ couleur',
        'colorpicker.FORMAT': 'Format de couleur',
        'colorpicker.SWATCH': 'Nauncier',
        'colorpicker.INSTRUCTION': 'Sélecteur de saturation et de luminosité. Utilisez les touches fléchées haut, bas, gauche et droite pour sélectionner.',
        'spinner.INCREASE': 'Augmenter la valeur',
        'spinner.DECREASE': 'Diminuer la valeur'
    },
    messages: {
        // components
        "javax.faces.component.UIInput.CONVERSION": "{0} : une erreur de conversion s'est produite.",
        "javax.faces.component.UIInput.REQUIRED": "{0} : Erreur de validation : la valeur est requise.",
        "javax.faces.component.UIInput.UPDATE": "{0} : Une erreur s'est produite lors du traitement des informations que vous avez saisies.",
        "javax.faces.component.UISelectOne.INVALID": "{0} : Erreur de validation : la valeur n'est pas valide.",
        "javax.faces.component.UISelectMany.INVALID": "{0} : Erreur de validation : la valeur n'est pas valide.",
         // converters
        "javax.faces.converter.BigDecimalConverter.DECIMAL": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal sign\u00e9.",
        "javax.faces.converter.BigDecimalConverter.DECIMAL_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal sign\u00e9 compos\u00e9 de z\u00e9ro ou plusieurs chiffres, lesquels peuvent \u00eatre suivis d'une d\u00e9cimale et d'une fraction.  Exemple : {1}",
        "javax.faces.converter.BigIntegerConverter.BIGINTEGER": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres. Exemple : {1}",
        "javax.faces.converter.BooleanConverter.BOOLEAN": "{1} : '{0}' doit \u00eatre 'true' ou 'false'.",
        "javax.faces.converter.BooleanConverter.BOOLEAN_detail": "{1} : '{0}' doit \u00eatre 'true' ou 'false'.  Toute valeur autre que 'true' sera \u00e9valu\u00e9e comme 'false'.",
        "javax.faces.converter.ByteConverter.BYTE": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compris entre 0 et 255.",
        "javax.faces.converter.ByteConverter.BYTE_detail": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compris entre 0 et 255.  Exemple : {1}",
        "javax.faces.converter.CharacterConverter.CHARACTER": "{1} : '{0}' doit \u00eatre un caract\u00e8re valide.",
        "javax.faces.converter.CharacterConverter.CHARACTER_detail": "{1} : '{0}' doit \u00eatre un caract\u00e8re ASCII valide.",
        "javax.faces.converter.DateTimeConverter.DATE": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date.",
        "javax.faces.converter.DateTimeConverter.DATE_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date. Exemple : {1}",
        "javax.faces.converter.DateTimeConverter.TIME": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une heure.",
        "javax.faces.converter.DateTimeConverter.TIME_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une heure. Exemple : {1}",
        "javax.faces.converter.DateTimeConverter.DATETIME": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date et une heure.",
        "javax.faces.converter.DateTimeConverter.DATETIME_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une date et une heure. Exemple : {1}",
        "javax.faces.converter.DateTimeConverter.PATTERN_TYPE": "{1} : Un attribut 'pattern' ou 'type' doit \u00eatre sp\u00e9cifi\u00e9 pour la conversion de la valeur '{0}'.",
        "javax.faces.converter.DoubleConverter.DOUBLE": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.DoubleConverter.DOUBLE_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre 4,9E-324 et 1,7976931348623157E308. Exemple : {1}",
        "javax.faces.converter.EnumConverter.ENUM": "{2} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration.",
        "javax.faces.converter.EnumConverter.ENUM_detail": "{2} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration qui contient la constante '{1}'.",
        "javax.faces.converter.EnumConverter.ENUM_NO_CLASS": "{1} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration, mais aucune classe d'\u00e9num\u00e9ration n'a \u00e9t\u00e9 fournie.",
        "javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail": "{1} : '{0}' doit \u00eatre convertible en \u00e9num\u00e9ration \u00e0 partir de l'\u00e9num\u00e9ration, mais aucune classe d'\u00e9num\u00e9ration n'a \u00e9t\u00e9 fournie.",
        "javax.faces.converter.FloatConverter.FLOAT": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.FloatConverter.FLOAT_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre 1,4E-45 et 3,4028235E38. Exemple : {1}",
        "javax.faces.converter.IntegerConverter.INTEGER": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.IntegerConverter.INTEGER_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -2147483648 et 2147483647. Exemple : {1}",
        "javax.faces.converter.LongConverter.LONG": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.LongConverter.LONG_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -9223372036854775808 et 9223372036854775807. Exemple : {1}",
        "javax.faces.converter.NumberConverter.CURRENCY": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une devise.",
        "javax.faces.converter.NumberConverter.CURRENCY_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme une devise. Exemple : {1}",
        "javax.faces.converter.NumberConverter.PERCENT": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme un pourcentage.",
        "javax.faces.converter.NumberConverter.PERCENT_detail": "{2} : '{0}' n'a pu \u00eatre interpr\u00e9t\u00e9 comme un pourcentage. Exemple : {1}",
        "javax.faces.converter.NumberConverter.NUMBER": "{2}: '{0}' n'est pas un nombre.",
        "javax.faces.converter.NumberConverter.NUMBER_detail": "{2}: '{0}' n'est pas un nombre. Exemple : {1}",
        "javax.faces.converter.NumberConverter.PATTERN": "{2}: '{0}' n'est pas un mod\u00e8le de nombre.",
        "javax.faces.converter.NumberConverter.PATTERN_detail": "{2}: '{0}' n'est pas un mod\u00e8le de nombre. Exemple : {1}",
        "javax.faces.converter.ShortConverter.SHORT": "{2} : '{0}' doit \u00eatre un nombre d\u00e9cimal compos\u00e9 d'un ou plusieurs chiffres.",
        "javax.faces.converter.ShortConverter.SHORT_detail": "{2} : '{0}' doit \u00eatre un nombre compris entre -32768 et 32767. Exemple : {1}",
        "javax.faces.converter.STRING": "{1} : Impossible de convertir '{0}' en cha\u00eene.",
        // validators
        "javax.faces.validator.NOT_IN_RANGE": "Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}.",
        "javax.faces.validator.DoubleRangeValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'",
        "javax.faces.validator.DoubleRangeValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'",
        "javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE": "{2} : Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}.",
        "javax.faces.validator.DoubleRangeValidator.TYPE": "{0} : Erreur de validation : la valeur n'est pas du bon type.",
        "javax.faces.validator.LengthValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'",
        "javax.faces.validator.LengthValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'",
        "javax.faces.validator.LongRangeValidator.MAXIMUM": "{1} : Erreur de validation : la valeur est sup\u00e9rieure au maximum autoris\u00e9 de '{0}'",
        "javax.faces.validator.LongRangeValidator.MINIMUM": "{1} : Erreur de validation : la valeur est inf\u00e9rieure au minimum autoris\u00e9 de '{0}'",
        "javax.faces.validator.LongRangeValidator.NOT_IN_RANGE": "{2} : Erreur de validation : l'attribut sp\u00e9cifi\u00e9 n'est pas compris entre les valeurs attendues de {0} et de {1}.",
        "javax.faces.validator.LongRangeValidator.TYPE": "{0} : Erreur de validation : la valeur n'est pas du bon type.",
        "javax.faces.validator.RegexValidator.NOT_MATCHED": "{1} : Erreur de validation : la valeur ne correspond pas au mod\u00e8le '{0}'",
        "javax.faces.validator.BeanValidator.MESSAGE": "{1} : {0}"
    }
};
/** Spanish */
PrimeFaces.locales['es'] = {
    closeText: 'Cerrar',
    prevText: 'Anterior',
    nextText: 'Siguiente',
    monthNames: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
    monthNamesShort: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
    dayNames: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
    dayNamesShort: ['Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab'],
    dayNamesMin: ['D', 'L', 'M', 'X', 'J', 'V', 'S'],
    weekHeader: 'Semana',
    weekNumberTitle: 'S',
    firstDay: 1,
    isRTL: false,
    showMonthAfterYear: false,
    yearSuffix: '',
    timeOnlyTitle: 'Sólo hora',
    timeText: 'Tiempo',
    hourText: 'Hora',
    minuteText: 'Minuto',
    secondText: 'Segundo',
    millisecondText: 'Milisegundo',
    currentText: 'Fecha actual',
    ampm: false,
    year: 'Año',
    month: 'Mes',
    week: 'Semana',
    day: 'Día',
    today: 'Hoy',
    clear: 'Limpiar',
    list: 'Agenda',
    allDayText: 'Todo el día',
    moreLinkText: 'Más....',
    noEventsText: 'No hay eventos',
    aria: {
         'paginator.PAGE': 'Página {0}',
         'calendar.BUTTON': 'Mostrar calendario',
         'datatable.sort.ASC': 'ordenar columna ascendente',
         'datatable.sort.DESC': 'ordenar columna descendente',
         'datatable.sort.NONE': 'eliminar la clasificación en la columna',
         'columntoggler.CLOSE': 'Cerrar',
         'overlaypanel.CLOSE': 'Cerrar',
         'colorpicker.OPEN': 'Abrir selector de color',
         'colorpicker.CLOSE': 'Cerrar el selector de color',
         'colorpicker.CLEAR': 'Limpiar el color seleccionado',
         'colorpicker.MARKER': 'Saturación: {s}. Brillo: {v}.',
         'colorpicker.HUESLIDER': 'Deslizador de tono',
         'colorpicker.ALPHASLIDER': 'Deslizador de opacidad',
         'colorpicker.INPUT': 'Campo de valor de color',
         'colorpicker.FORMAT': 'Formato de color',
         'colorpicker.SWATCH': 'Muestra de color',
         'colorpicker.INSTRUCTION': 'Selector de saturación y brillo. Utilice las teclas de flecha arriba, abajo, izquierda y derecha para seleccionar.',
         'spinner.INCREASE': 'Aumentar valor',
         'spinner.DECREASE': 'Disminuir valor'
    },
    messages: { //optional for Client Side Validation
        'javax.faces.component.UIInput.REQUIRED': '{0}: Error de validación: se necesita un valor.',
        'javax.faces.converter.IntegerConverter.INTEGER': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
        'javax.faces.converter.IntegerConverter.INTEGER_detail': '{2}: \'{0}\' debe ser un número entre -2147483648 y 2147483647. Ejemplo: {1}',
        'javax.faces.converter.DoubleConverter.DOUBLE': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
        'javax.faces.converter.DoubleConverter.DOUBLE_detail': '{2}: \'{0}\' debe ser un número entre 4.9E-324 y 1.7976931348623157E308  Ejemplo: {1}',
        'javax.faces.converter.BigDecimalConverter.DECIMAL': '{2}: \'{0}\' debe ser un número decimal positivo o negativo.',
        'javax.faces.converter.BigDecimalConverter.DECIMAL_detail': '{2}: \'{0}\' debe ser un número decimal positivo o negativo formado por cero o más dígitos, que pueden incluir a continuación una coma decimal y una fracción.  Ejemplo: {1}',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
        'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos. Ejemplo: {1}',
        'javax.faces.converter.ByteConverter.BYTE': '{2}: \'{0}\' debe ser un número entre 0 y 255.',
        'javax.faces.converter.ByteConverter.BYTE_detail': '{2}: \'{0}\' debe ser un número entre 0 y 255.  Ejemplo: {1}',
        'javax.faces.converter.CharacterConverter.CHARACTER': '{1}: \'{0}\' debe ser un carácter válido.',
        'javax.faces.converter.CharacterConverter.CHARACTER_detail': '{1}: \'{0}\' debe ser un carácter ASCII válido.',
        'javax.faces.converter.ShortConverter.SHORT': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
        'javax.faces.converter.ShortConverter.SHORT_detail': '{2}: \'{0}\' debe ser un número entre -32768 y 32767 Ejemplo: {1}',
        'javax.faces.converter.BooleanConverter.BOOLEAN': '{1}: \'{0}\' debe ser \'true\' o \'false\'',
        'javax.faces.converter.BooleanConverter.BOOLEAN_detail': '{1}: \'{0}\' debe ser \'true\' o \'false\'.  Cualquier valor diferente a \'true\' se evaluará como \'false\'.',
        'javax.faces.validator.LongRangeValidator.MAXIMUM': '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
        'javax.faces.validator.LongRangeValidator.MINIMUM': '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
        'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE': '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}.',
        'javax.faces.validator.LongRangeValidator.TYPE': '{0}: Error de validación: el valor no tiene el tipo correcto.',
        'javax.faces.validator.DoubleRangeValidator.MAXIMUM': '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
        'javax.faces.validator.DoubleRangeValidator.MINIMUM': '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
        'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE': '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}',
        'javax.faces.validator.DoubleRangeValidator.TYPE': '{0}: Error de validación: el valor no tiene el tipo correcto.',
        'javax.faces.converter.FloatConverter.FLOAT': '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
        'javax.faces.converter.FloatConverter.FLOAT_detail': '{2}: \'{0}\' debe ser un número entre 1.4E-45 y 3.4028235E38  Ejemplo: {1}',
        'javax.faces.converter.DateTimeConverter.DATE': '{2}: \'{0}\' no se ha podido reconocer como fecha.',
        'javax.faces.converter.DateTimeConverter.DATE_detail': '{2}: \'{0}\' no se ha podido reconocer como fecha. Ejemplo: {1}',
        'javax.faces.converter.DateTimeConverter.TIME': '{2}: \'{0}\' no se ha podido reconocer como hora.',
        'javax.faces.converter.DateTimeConverter.TIME_detail': '{2}: \'{0}\' no se ha podido reconocer como hora. Ejemplo: {1}',
        'javax.faces.converter.DateTimeConverter.DATETIME': '{2}: \'{0}\' no se ha podido reconocer como fecha y hora.',
        'javax.faces.converter.DateTimeConverter.DATETIME_detail': '{2}: \'{0}\' no se ha podido reconocer como fecha y hora. Ejemplo: {1}',
        'javax.faces.converter.DateTimeConverter.PATTERN_TYPE': '{1}: debe especificarse el atributo \'pattern\' o \'type\' para convertir el valor \'{0}\'',
        'javax.faces.converter.NumberConverter.CURRENCY': '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa.',
        'javax.faces.converter.NumberConverter.CURRENCY_detail': '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa. Ejemplo: {1}',
        'javax.faces.converter.NumberConverter.PERCENT': '{2}: \'{0}\' no se ha podido reconocer como porcentaje.',
        'javax.faces.converter.NumberConverter.PERCENT_detail': '{2}: \'{0}\' no se ha podido reconocer como porcentaje. Ejemplo: {1}',
        'javax.faces.converter.NumberConverter.NUMBER': '{2}: \'{0}\' no se ha podido reconocer como fecha.',
        'javax.faces.converter.NumberConverter.NUMBER_detail': '{2}: \'{0}\' no es un número. Ejemplo: {1}',
        'javax.faces.converter.NumberConverter.PATTERN': '{2}: \'{0}\' no es un patrón numérico.',
        'javax.faces.converter.NumberConverter.PATTERN_detail': '{2}: \'{0}\' no es un patrón numérico. Ejemplo: {1}',
        'javax.faces.validator.LengthValidator.MINIMUM': '{1}: Error de validación: el largo es inferior que el mínimo permitido de \'{0}\'',
        'javax.faces.validator.LengthValidator.MAXIMUM': '{1}: Error de validación: el largo es mayor que el máximo permitido de \'{0}\'',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET': 'Se debe establecer el patrón de Regex.',
        'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail': 'El patrón Regex debe establecerse en un valor no vacío.',
        'javax.faces.validator.RegexValidator.NOT_MATCHED': 'El patrón Regex no coincide',
        'javax.faces.validator.RegexValidator.NOT_MATCHED_detail': 'El patrón Regex de \'{0}\' no coincide',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION': 'Error en expresión regular.',
        'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail': 'Error en expresión regular, \'{0}\'',
        //optional for bean validation integration in client side validation
        'javax.faces.validator.BeanValidator.MESSAGE': '{0}',
        'javax.validation.constraints.AssertFalse.message': 'debe ser falso',
        'javax.validation.constraints.AssertTrue.message': 'debe ser verdadero',
        'javax.validation.constraints.DecimalMax.message': 'debe ser menor que o igual a {0}',
        'javax.validation.constraints.DecimalMin.message': 'debe ser mayor que o igual a {0}',
        'javax.validation.constraints.Digits.message': 'valor numérico fuera de los límites (se esperaba (<{0} digitos>.<{1} digitos>)',
        'javax.validation.constraints.Future.message': 'debe ser una fecha futura',
        'javax.validation.constraints.Max.message': 'debe ser menor que o igual a {0}',
        'javax.validation.constraints.Min.message': 'debe ser mayor que o igual a {0}',
        'javax.validation.constraints.NotNull.message': 'no debe ser nulo',
        'javax.validation.constraints.Null.message': 'debe ser nulo',
        'javax.validation.constraints.Past.message': 'debe ser una fecha pasada',
        'javax.validation.constraints.Pattern.message': 'debe coincidir con "{0}"',
        'javax.validation.constraints.Size.message': 'el tamaño debe estar entre {0} y {1}'
    }
};
