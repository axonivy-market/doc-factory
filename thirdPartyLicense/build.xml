<!-- 
======================================================================
This build creates a JAR which wrapps the Aspose license access.

To update Aspose do the follwing steps:
1. Copy a new license to src/ch/ivyteam/ivy/ThirdPartyLicenses.properties
   (a) Ensure that the license is in properties format. May you have to read delivered XML into a java.util.Properties() object and store it.
2. Update the Aspose word JAR in this project (lib folder) so and run the JUnit testcase to ensure that the license is valid.
3. Run this build -> a new JAR will be created in the output directory
4. Copy the created JAR into the ivyAddOns/lib folder
5. Copy the aspose libraries into the ivyAddOns/lib/aspose folder.
6. Test Aspose by starting the RichDialogDemos (IvyDemos) project and use the DocumentFactory.

====================================================================== 
-->
<project name="ThirdPartyLicense" default="all">
	<description>
		Generates a *.jar with the third party license classes
	</description>

	<property name="dir.classes" value="classes"/>
	<property name="dir.src" value="src"/>
	<property name="dir.output" value="output"/>
	<property name="dir.lib" value="lib"/>
	<property name="name.jar" value="ivyThirdPartyLicense.jar"/>
	
	<!-- 
======================================================================
all
====================================================================== 
	-->
	<target name="all" depends="jar">
	</target>

	<!-- 
======================================================================
clean
====================================================================== 
	-->
	<target name="clean">
		<delete dir="${dir.output}"/>
		<delete includeEmptyDirs="true">
		  <fileset dir="${dir.classes}" includes="**/*"/>
		</delete>
	</target>
		
	<!-- 
======================================================================
jar
====================================================================== 
	-->
	<target name="jar" depends="clean, compile, buildDate">
      <mkdir dir="${dir.output}"/>
	  <jar destfile="${dir.output}/${name.jar}">
	  	<fileset dir="${dir.classes}"/>
	  	<manifest>
	  	    <section name="common">
	  	      <attribute name="Specification-Title" value="Ivy Third Party Licenses"/>
	  	      <attribute name="Specification-Version" value="1.0"/>
	  	      <attribute name="Specification-Vendor" value="ivyTeam AG"/>
	  	      <attribute name="Implementation-Title" value="Ivy Third Party Licenses"/>
	  	      <attribute name="Implementation-Version" value="Build: ${build.date} Rev: ${svn.rev}"/> 
	  	      <attribute name="Implementation-Vendor" value="ivyTeam AG"/>
	  	    </section>
		</manifest>
	  </jar>
      <echo message="------------------------------------------------------------" />
      <echo message="Created apose license JAR in '${dir.output}/${name.jar}'. " />
      <echo message="This JAR must be manually copied into the 'ivyAddOns/lib' folder." />
	  <echo message="Afterwards the new aspose libraries must be copied as well into the 'ivyAddOns/lib/aspose' folder" />
      <echo message="------------------------------------------------------------" />
	</target>

	<!-- 
======================================================================
buildDate
====================================================================== 
	-->
	<target name="buildDate">
		<tstamp>
			<format property="build.date" pattern="yyyy-MM-dd"/>
	    </tstamp>
		
	 	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml"> 
			<classpath>
				<fileset dir="..\antlibs" includes="**/*.jar" erroronmissingdir="false"/>				
			</classpath>
	    </typedef>
        <svn>
        	<info target="${basedir}" propPrefix="svn."/> 
		</svn>			
	</target>
	
	<!-- 
======================================================================
compile
====================================================================== 
	-->
	<target name="compile">
      <mkdir dir="${dir.classes}"/>
	  <javac srcdir="${dir.src}" destdir="${dir.classes}" target="1.6" source="1.6" includeantruntime="false">
	  	<classpath>
	  	  <fileset dir="${dir.lib}" includes="*.jar"/>
	  	</classpath>
	  </javac>
	  <copy todir="${dir.classes}">
	    <fileset dir="${dir.src}" includes="**/*.properties"/>
	  </copy>
	</target>

</project>